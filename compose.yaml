services:
  
  # main service:
  #  - builds the docker image (build .)
  #  - create the bind mount folder in case it is not present (create_host_path: true)
  #  - opens the container without running any specific command (start from /bin/bash as for Dockerfile)

  main:
    image: correlations
    build: .
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results
        bind:
          create_host_path: true

  # all the other services:
  #   - depend on the main and use the same docker image
  #   - are linked to the same bind mount folder but without the need to create it
  #   - run a specific command corresponding to a top-level script (set the folder as 'results' as for Dockerfile)

  calibration:
    image: correlations
    depends_on: [ main ]
    command: python calibration.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  causality:
    image: correlations
    depends_on: [ main ]
    command: python causality.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  copulas:
    image: correlations
    depends_on: [ main ]
    command: python copulas.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  correlations:
    image: correlations
    depends_on: [ main ]
    command: python correlations.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  correlations_test:
    image: correlations
    depends_on: [ main ]
    command: python correlations.py --test --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  degrees:
    image: correlations
    depends_on: [ main ]
    command: python degrees.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  determinism:
    image: correlations
    depends_on: [ main ]
    command: python determinism.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  example:
    image: correlations
    depends_on: [ main ]
    command: python example.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  gedi:
    image: correlations
    depends_on: [ main ]
    command: python gedi.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  hgr:
    image: correlations
    depends_on: [ main ]
    command: python hgr.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  importance:
    image: correlations
    depends_on: [ main ]
    command: python importance.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  limitations:
    image: correlations
    depends_on: [ main ]
    command: python limitations.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  lstsq:
    image: correlations
    depends_on: [ main ]
    command: python lstsq.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  monotonicity:
    image: correlations
    depends_on: [ main ]
    command: python monotonicity.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  onehot:
    image: correlations
    depends_on: [ main ]
    command: python onehot.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  overfitting:
    image: correlations
    depends_on: [ main ]
    command: python overfitting.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results

  projections:
    image: correlations
    depends_on: [ main ]
    command: python projections.py --folder results
    volumes:
      - type: bind
        source: ${FOLDER:-results}
        target: /project/results